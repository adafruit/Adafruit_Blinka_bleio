# SPDX-FileCopyrightText: 2017 Scott Shawcroft, written for Adafruit Industries
#
# SPDX-License-Identifier: MIT

name: Release Actions

on:
  release:
    types: [published]

jobs:
  upload-release-assets:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Translate Repo Name For Build Tools filename_prefix
      id: repo-name
      run: |
        echo "repo-name=$(
        echo ${{ github.repository }} |
        awk -F '\/' '{ print tolower($2) }' |
        tr '_' '-'
        )" >> $GITHUB_OUTPUT
    - name: Set up Python 3.x
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Versions
      run: |
        python3 --version
    - name: Checkout Current Repo
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Checkout tools repo
      uses: actions/checkout@v3
      with:
        repository: adafruit/actions-ci-circuitpython-libs
        path: actions-ci
    - name: Install deps
      run: |
        source actions-ci/install.sh
    - name: Build assets
      run: circuitpython-build-bundles --filename_prefix ${{ steps.repo-name.outputs.repo-name }} --library_location .
    - name: Upload Release Assets
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        asset_path: "bundles/*"
        github_token: ${{ secrets.GITHUB_TOKEN }}
        upload_url: ${{ github.event.release.upload_url }}

  upload-pypi:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Check For pyproject.toml
      id: need-pypi
      run: |
        echo "pyproject-toml=$( find . -wholename './pyproject.toml' )" >> $GITHUB_OUTPUT
    - name: Set up Python
      if: contains(steps.need-pypi.outputs.pyproject-toml, 'pyproject.toml')
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      if: contains(steps.need-pypi.outputs.pyproject-toml, 'pyproject.toml')
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build twine
    - name: Build and publish
      if: contains(steps.need-pypi.outputs.pyproject-toml, 'pyproject.toml')
      env:
        TWINE_USERNAME: ${{ secrets.pypi_username }}
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      run: |
        for file in $(find -not -path "./.*" -not -path "./docs*" \( -name "*.py" -o -name "*.toml" \) ); do
            sed -i -e "s/0.0.0+auto.0/${{github.event.release.tag_name}}/" $file;
        done;
        python -m build
        twine upload dist/*
